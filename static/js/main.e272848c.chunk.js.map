{"version":3,"sources":["logo.svg","Components/Scene/Scene.js","App.js","reportWebVitals.js","index.js"],"names":["Scene","mountRef","useRef","useEffect","temp","current","scene","THREE","add","light","position","set","camera","window","innerWidth","innerHeight","lookAt","renderer","setSize","appendChild","domElement","axesHelper","gridHelper","controls","OrbitControls","target","enableDamping","dampingFactor","moonGeometry","moonMaterial","color","moon","y","castShadow","receiveShadow","addEventListener","aspect","updateProjectionMatrix","clock","tick","elapsedTime","getElapsedTime","x","Math","cos","z","sin","update","render","requestAnimationFrame","removeChild","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8LAAe,I,2BCKA,SAASA,IACtB,IAAMC,EAAWC,iBAAO,MA4ExB,OA1EAC,qBAAU,WACR,IAAIC,EAAOH,EAASI,QACdC,EAAQ,IAAIC,IAClBD,EAAME,IAAI,IAAID,IAAiB,IAE/B,IAAME,EAAQ,IAAIF,IAAiB,SAAU,GAC7CE,EAAMC,SAASC,IAAI,EAAG,GAAI,GAC1BL,EAAME,IAAIC,GAEV,IAAMG,EAAS,IAAIL,IACjB,GACAM,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAEFH,EAAOF,SAASC,IAAI,GAAI,GAAI,IAC5BC,EAAOI,OAAO,EAAG,EAAG,GAEpB,IAAMC,EAAW,IAAIV,IACrBU,EAASC,QAAQL,OAAOC,WAAYD,OAAOE,aAC3Cd,EAASI,QAAQc,YAAYF,EAASG,YAEtC,IAAMC,EAAa,IAAId,IAAiB,GACxCD,EAAME,IAAIa,GAEV,IAAMC,EAAa,IAAIf,IAAiB,IAAM,IAC9CD,EAAME,IAAIc,GAEV,IAAMC,EAAW,IAAIC,IAAcZ,EAAQK,EAASG,YACpDG,EAASE,OAAOd,IAAI,EAAG,EAAG,GAC1BY,EAASG,eAAgB,EACzBH,EAASI,cAAgB,IAEzB,IAAMC,EAAe,IAAIrB,IAAqB,EAAG,GAAI,IAC/CsB,EAAe,IAAItB,IAA2B,CAClDuB,MAAO,YAEHC,EAAO,IAAIxB,IAAWqB,EAAcC,GAC1CE,EAAKrB,SAASsB,EAAI,EAClBD,EAAKE,YAAa,EAClBF,EAAKG,eAAgB,EACrB5B,EAAME,IAAIuB,GAEVlB,OAAOsB,iBAAiB,UACxB,WACEvB,EAAOwB,OAASvB,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOyB,yBACPpB,EAASC,QAAQL,OAAOC,WAAYD,OAAOE,gBAJK,GAQlD,IAAMuB,EAAQ,IAAI/B,IAoBlB,OAlBa,SAAPgC,IACJ,IAAMC,EAAcF,EAAMG,iBAE1BV,EAAKrB,SAASgC,EAAI,GAAKC,KAAKC,IAAIJ,GAChCT,EAAKrB,SAASmC,EAAI,GAAKF,KAAKG,IAAIN,GAChCT,EAAKrB,SAASsB,EAAI,GAAKW,KAAKG,IAAIN,GAEhCjB,EAASwB,SAGT9B,EAAS+B,OAAO1C,EAAOM,GAGvBC,OAAOoC,sBAAsBV,GAG/BA,GAEO,kBAAMnC,EAAK8C,YAAYjC,EAASG,eACtC,IAEI,qBAAK+B,IAAKlD,IC1EJmD,MAJf,WACE,OAAO,cAACpD,EAAD,KCOMqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e272848c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useRef } from \"react\";\n\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n\nexport default function Scene() {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    let temp = mountRef.current;\n    const scene = new THREE.Scene();\n    scene.add(new THREE.AxesHelper(5));\n\n    const light = new THREE.PointLight(0xffffff, 1);\n    light.position.set(0, 15, 0);\n    scene.add(light);\n\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000,\n    );\n    camera.position.set(30, 30, 10);\n    camera.lookAt(0, 0, 0);\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    const axesHelper = new THREE.AxesHelper(5);\n    scene.add(axesHelper);\n\n    const gridHelper = new THREE.GridHelper(1000, 20);\n    scene.add(gridHelper);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.target.set(0, 0, 0);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    const moonGeometry = new THREE.SphereGeometry(1, 32, 32);\n    const moonMaterial = new THREE.MeshStandardMaterial({\n      color: \"#d3d3d3\",\n    });\n    const moon = new THREE.Mesh(moonGeometry, moonMaterial);\n    moon.position.y = 1;\n    moon.castShadow = true;\n    moon.receiveShadow = true;\n    scene.add(moon);\n\n    window.addEventListener(\"resize\", onWindowResize, false);\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      //render();\n    }\n\n    const clock = new THREE.Clock();\n\n    const tick = () => {\n      const elapsedTime = clock.getElapsedTime();\n\n      moon.position.x = 10 * Math.cos(elapsedTime);\n      moon.position.z = 10 * Math.sin(elapsedTime);\n      moon.position.y = 10 * Math.sin(elapsedTime);\n      // Update controls\n      controls.update();\n\n      // Render\n      renderer.render(scene, camera);\n\n      // Call tick again on the next frame\n      window.requestAnimationFrame(tick);\n    };\n\n    tick();\n\n    return () => temp.removeChild(renderer.domElement);\n  }, []);\n\n  return <div ref={mountRef}></div>;\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Scene from \"./Components/Scene/Scene\";\n\nfunction App() {\n  return <Scene />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}